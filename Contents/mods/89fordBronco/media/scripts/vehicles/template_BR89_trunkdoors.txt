module Base
{

	model 89fordBroncotrunkDoor
	{
		mesh = vehicles/Vehicles_89fordBronco_Body|89bronco_trunkDoor,
		shader = vehicle,
		static = FALSE,
		scale = 0.1,
	}

	model 89fordBroncorearWindshield
    {
        mesh = vehicles/Vehicles_89fordBronco_Body|89bronco_windshield_rear,
        shader = vehicle,
        static = FALSE,
        scale = 0.1,
    }

	template vehicle BR89TrunkDoors
	{
		part TrunkDoor
		{

			model SoHuge668
			{
				file = 89fordBroncotrunkDoor,
				offset = 0 0 0,
				rotate = 0 0 0,
				scale = 1.0,
			}

			anim Close
			{
				anim = trunk_opening,
				reverse = TRUE,
				rate = 1,
			}

			anim Open
			{
				anim = trunk_opening,
				rate = 0.5,
			}

			anim Closed
			{
				anim = trunk_opening,
				animate = FALSE,
			}

			anim Opened
			{
				anim = trunk_opening,
				reverse = TRUE,
				animate = FALSE,
			}

			category = bodywork,
			area = TruckBed,
			door
			{
			}
			anim Open
			{
				sound = VehicleTrunkOpenStandard,
			}
			anim Close
			{
				sound = VehicleTrunkCloseStandard,
			}
			anim Lock
			{
				sound = LockVehicleDoorStandard,
			}
			anim Unlock
			{
				sound = UnlockVehicleDoorStandard,
			}
			anim IsLocked
			{
				sound = VehicleDoorIsLockedStandard,
			}
			anim ActorOpen
			{
				anim = WindowOpenSuccess,
				rate = 0.15,
				angle = 0.0 0.0 0.0,
			}
			anim ActorClose
			{
				anim = Attack_Shove,
				rate = 0.3,
				angle = 0.0 0.0 0.0,
			}
			itemType = Base.89BroncoTrunkDoor,
			mechanicRequireKey = true,
			repairMechanic = true,
			table install
			{
				items
				{
					item
					{
						type = Base.Wrench,
						count = 1,
						keep = true,
						equip = primary,
					}
				}
				time = 1000,
				skills = Mechanics:2,
				recipes = Intermediate Mechanics,
				test = Vehicles.InstallTest.Default,
				complete = Vehicles.InstallComplete.Door,
			}
			table uninstall
			{
				items
				{
					item
					{
						type = Base.Wrench,
						count = 1,
						keep = true,
						equip = primary,
					}
				}
				time = 1000,
				skills = Mechanics:2,
				recipes = Intermediate Mechanics,
				test = Vehicles.UninstallTest.Default,
				complete = Vehicles.UninstallComplete.Door,

			}
			lua
			{
				create = Vehicles.Create.TrunkDoor,
				init = Vehicles.Init.Door,
				use = Vehicles.Use.TrunkDoor,
			}
		}

		part WindshieldRear
        {
            model SoHuge669
			{
				file = 89fordBroncorearWindshield,
				offset = 0 0 0,
				rotate = 0 0 0,
				scale = 1.0,
			}

			anim Close
			{
				anim = trunk_top_opening,
				reverse = TRUE,
				rate = 0.4,
			}

			anim Open
			{
				anim = trunk_top_opening,
				rate = 0.5,
			}

			anim Closed
			{
				anim = trunk_top_opening,
				animate = FALSE,
			}

			anim Opened
			{
				anim = trunk_top_opening,
				reverse = TRUE,
				animate = FALSE,
			}

			category = bodywork,
			area = TruckBed2,
			door
			{
			}
			anim Open
			{
				sound = VehicleTrunkOpenStandard,
			}
			anim Close
			{
				sound = VehicleTrunkCloseStandard,
			}
			anim Lock
			{
				sound = LockVehicleDoorStandard,
			}
			anim Unlock
			{
				sound = UnlockVehicleDoorStandard,
			}
			anim IsLocked
			{
				sound = VehicleDoorIsLockedStandard,
			}
			anim ActorOpen
			{
				anim = WindowOpenSuccess,
				rate = 0.15,
				angle = 0.0 0.0 0.0,
			}
			anim ActorClose
			{
				anim = Attack_Shove,
				rate = 0.3,
				angle = 0.0 0.0 0.0,
			}
			itemType = Base.89BroncoWindshieldRear,
			mechanicRequireKey = true,
			repairMechanic = true,
			table install
			{
				items
				{
					item
					{
						type = Base.Wrench,
						count = 1,
						keep = true,
						equip = primary,
					}
				}
				time = 1000,
				skills = Mechanics:2,
				recipes = Intermediate Mechanics,
				test = KI5.InstallTest.Default,
				complete = Vehicles.InstallComplete.Door,
				requireInstalled = BR89BedCover,

			}
			table uninstall
			{
				items
				{
					item
					{
						type = Base.Wrench,
						count = 1,
						keep = true,
						equip = primary,
					}
				}
				time = 1000,
				skills = Mechanics:2,
				recipes = Intermediate Mechanics,
				test = KI5.UninstallTest.Default,
				complete = Vehicles.UninstallComplete.Door,

			}
			lua
			{
				create = Vehicles.Create.TrunkDoor,
				init = Vehicles.Init.Door,
				use = Vehicles.Use.TrunkDoor,
			}
        }
	}
}

