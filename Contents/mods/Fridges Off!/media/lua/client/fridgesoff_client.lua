---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by Erick.
--- DateTime: 24/08/2022 16:34
---

---@class ISToggleFridgesFreezers : ISBaseTimedAction
ISToggleFridgesFreezers = ISBaseTimedAction:derive("ISToggleFridgesFreezers");

function ISToggleFridgesFreezers:isValid()
    return true
end

function ISToggleFridgesFreezers:update()
end

function ISToggleFridgesFreezers:start()
    self.character:faceThisObject(self.object)
end

function ISToggleFridgesFreezers:stop()
    ISBaseTimedAction.stop(self)
end

function ISToggleFridgesFreezers:perform()

    if self.state == 0 then
        sendClientCommand("fridges-off", "off", {x = self.object:getX(),y = self.object:getY(),z = self.object:getZ()});
    else
        sendClientCommand("fridges-off", "on", {x = self.object:getX(),y = self.object:getY(),z = self.object:getZ()});
    end

    -- needed to remove from queue / start next.
    ISBaseTimedAction.perform(self)
end

function ISToggleFridgesFreezers:new(objPlayer, state, obj)
    local o = {}
    setmetatable(o, self)
    self.__index = self
    o.character = objPlayer
    o.stopOnWalk = false
    o.stopOnRun = false
    o.maxTime = 0
    -- custom fields
    o.object = obj
    o.state = state
    return o
end

---@param player IsoPlayer
---@param context KahluaTable
---@param worldObjects KahluaTable
---@param _ Boolean
local function customizedContextMenu(player, context, worldObjects, _)

    local objectPlayer = getSpecificPlayer(player)

    if objectPlayer:isAsleep() then
        return
    end

    ---@param objPlayer IsoPlayer
    ---@param state Integer
    ---@param o IsoObject
    local changeFridgeFreezerState = function(_,objPlayer,state,o)
        if luautils.walkAdj(objPlayer, o:getSquare()) then
            ISTimedActionQueue.add(ISToggleFridgesFreezers:new(objPlayer, state, o))
        end
    end

    ---@type IsoObject
    local actualObject = worldObjects[1]

    if actualObject then
        local containerCount = actualObject:getContainerCount()
        if containerCount > 0 then
            local containerType = actualObject:getContainer():getType()
            if containerType == "fridge" or containerType == "freezer" then
                context:addOptionOnTop(getText("ContextMenu_TurnOff"), worldObjects, changeFridgeFreezerState, objectPlayer, 0, actualObject)
            end
            if containerType == "fridge_off" or containerType == "freezer_off" then
                context:addOptionOnTop(getText("ContextMenu_TurnOn"), worldObjects, changeFridgeFreezerState, objectPlayer, 1, actualObject)
            end
        end
    end

end

local function loadNewIcons()

    ---@type Texture
    local textureFridgeOff = getTexture("media/ui/Container_FridgeOff.png")

    ---@type Texture
    local textureFreezerOff = getTexture("media/ui/Container_FreezerOff.png")

    ContainerButtonIcons.fridge_off = textureFridgeOff
    ContainerButtonIcons.freezer_off = textureFreezerOff

end

local function onServerCommand(module,command,args)

    if module == "fridges-off" then

        if command == "sync" then

            local objects = getWorld():getCell():getGridSquare(args.x,args.y,args.z):getObjects()

            ---@type IsoObject
            local object

            for i=0,objects:size()-1,1 do
                if objects:get(i):getContainerCount() > 0 then
                    if objects:get(i):getContainerByEitherType("fridge","freezer") or objects:get(i):getContainerByEitherType("fridge_off","freezer_off") then
                        object = objects:get(i)
                        break
                    end
                end
            end

            if object ~= nil then

                if args.fridge == "on" then
                    if object:getContainerByType("fridge_off") ~= nil then
                        object:getContainerByType("fridge_off"):setType("fridge")
                    end
                else
                    if args.fridge == "off" then
                        if object:getContainerByType("fridge") ~= nil then
                            object:getContainerByType("fridge"):setType("fridge_off")
                        end
                    end
                end

                if args.freezer == "on" then
                    if object:getContainerByType("freezer_off") ~= nil then
                        object:getContainerByType("freezer_off"):setType("freezer")
                    end
                else
                    if args.freezer == "off" then
                        if object:getContainerByType("freezer") ~= nil then
                            object:getContainerByType("freezer"):setType("freezer_off")
                        end
                    end
                end

                IsoGenerator.updateGenerator(object:getSquare())

                object:checkHaveElectricity()

                local playerData = getPlayerData(getPlayer():getPlayerNum())
                if playerData ~= nil then
                    playerData.playerInventory:refreshBackpacks()
                    playerData.lootInventory:refreshBackpacks()
                end

            end
        end
    end
end

Events.OnGameBoot.Add(loadNewIcons)
Events.OnPreFillWorldObjectContextMenu.Add(customizedContextMenu)
Events.OnServerCommand.Add(onServerCommand)